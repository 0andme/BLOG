<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="http://localhost:4000/tag/git-github/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2021-10-16T06:24:53+09:00</updated>
  <id>http://localhost:4000/tag/git-github/feed.xml</id>

  
  
  

  
    <title type="html">0andme의 개발 블로그 | </title>
  

  
    <subtitle>LV.99 개발자 되기</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">혼자하는 Git/Github 전체적인 흐름 알아보기 - 상</title>
      <link href="http://localhost:4000/git_alone_1" rel="alternate" type="text/html" title="혼자하는 Git/Github 전체적인 흐름 알아보기 - 상" />
      <published>2021-07-31T09:00:01+09:00</published>
      <updated>2021-07-31T09:00:01+09:00</updated>
      <id>http://localhost:4000/git_alone_1</id>
      <content type="html" xml:base="http://localhost:4000/git_alone_1">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Git/Github &lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;postListBtn&quot; style=&quot;margin-top: -30px;&quot;&gt; 글 목록 닫기&lt;/p&gt;

&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;/git_alone_1&quot;&gt; [혼자하는 Git/Github] 전체적인 흐름 알아보기 - 상&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;/git_alone_2&quot;&gt; [혼자하는 Git/Github] 전체적인 흐름 알아보기 - 하&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;/git_alone_example&quot;&gt; [혼자하는 Git/Github] 전체적인 흐름 알아보기 - 예시&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;/git_withTeam&quot;&gt; [함께하는 Git/Github] 팀원과 프로젝트 함께하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;/assets/js/postListBtn.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;
&lt;!-- excerpt-start --&gt;
&lt;p&gt;1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890
1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890
1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890
1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890&lt;/p&gt;
&lt;noscript&gt;&lt;pre&gt;const basePixelFilter = [255, 127, 127, 0.8];

// sets up canvas state for next capture interval
function resetCanvas(status, src) {
    for (var i = 0; i &amp;lt; src.data.length; i += 4) {
        var pixelScore = src.data[i] / 3 + src.data[i + 1] / 3 + src.data[i + 2] / 3;
        if (pixelScore &amp;gt; PIXEL_SCORE_THRESHOLD) {
            status.canvasStatus.exceedsUpperBound = true;
            break;
        }
    }
    AuditLog.pushState(&amp;#39;status&amp;#39;, status, false); // async servers don&amp;#39;t keep audit logs
    return !status.canvasStatus.exceedsUpperBound &amp;amp;&amp;amp; AuditLog.sanityCheck();
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/0andme/1ed5251325cbad6009e3d6acc4081bd9.js&quot;&gt; &lt;/script&gt;</content>

      
      
      
      
      

      <author>
          <name>0andme</name>
        
        
      </author>

      

      
        <category term="git-github" />
      

      
        <summary type="html">Git/Github 글 목록 닫기 [혼자하는 Git/Github] 전체적인 흐름 알아보기 - 상 [혼자하는 Git/Github] 전체적인 흐름 알아보기 - 하 [혼자하는 Git/Github] 전체적인 흐름 알아보기 - 예시 [함께하는 Git/Github] 팀원과 프로젝트 함께하기 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 const basePixelFilter = [255, 127, 127, 0.8]; // sets up canvas state for next capture interval function resetCanvas(status, src) { for (var i = 0; i &amp;lt; src.data.length; i += 4) { var pixelScore = src.data[i] / 3 + src.data[i + 1] / 3 + src.data[i + 2] / 3; if (pixelScore &amp;gt; PIXEL_SCORE_THRESHOLD) { status.canvasStatus.exceedsUpperBound = true; break; } } AuditLog.pushState(&amp;#39;status&amp;#39;, status, false); // async servers don&amp;#39;t keep audit logs return !status.canvasStatus.exceedsUpperBound &amp;amp;&amp;amp; AuditLog.sanityCheck(); }</summary>
      

      
      
    </entry>
  
</feed>
